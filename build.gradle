buildscript
{
	repositories
	{
		mavenCentral()
		mavenLocal()
		maven
		{
			name = "texasjake95Maven"
			url = "https://github.com/Texasjake95/maven-repo/raw/master/"
		}
	}
	dependencies
	{
		classpath 'com.texasjake95:GradlePlugin:1.1-SNAPSHOT'
	}
}

apply plugin: 'texasjake95'
apply plugin: 'groovy'

sourceCompatibility = 1.7

group= "com.texasjake95" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MinecraftGradlePlugin"
version = '1.0-SNAPSHOT'
jar {
}

repositories {
	maven
	{
		name = "forge"
		url = "http://files.minecraftforge.net/maven"
	}
	maven
	{
		name = "sonatype"
		url = "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.texasjake95:GradlePlugin:1.1-SNAPSHOT'
	compile group: "com.texasjake95", name: "Texasjake95Commons", version: "$commons_version", classifier:""
	compile 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
}

uploadArchives {
	dependsOn 'build'
	repositories {
		if(project.hasProperty("filesmaven"))
		{
			mavenDeployer {
				logger.info("Pushing to Maven Remote")
				repository(url: project.filesmaven)
				pom {
					groupId = project.group
					version = project.version
					artifactId = project.archivesBaseName
					project {
						name project.archivesBaseName
						packaging 'jar'
						description 'Plugin for Texasjake95\'s minecraft mod gradle scripts'
						url 'https://github.com/Texasjake95/MinecraftGradlePlugin'
						
						scm {
							url 'https://github.com/Texasjake95/MinecraftGradlePlugin'
							connection 'scm:git:git://github.com/Texasjake95/MinecraftGradlePlugin.git'
							developerConnection 'scm:git:git@github.com:Texasjake95/MinecraftGradlePlugin.git'
						}
						
						issueManagement {
							system 'github'
							url 'https://github.com/Texasjake95/MinecraftGradlePlugin/issues'
						}
						
						developers {
							developer {
								id 'Texasjake95'
								name 'Texasjake95'
								roles { role 'developer' }
							}
						}
					}
				}
			}
		}
		else{
			logger.info("Pushing to Maven Local")
			mavenDeployer {
				repository(url: project.repositories.mavenLocal().url)
			}
		}
	}
}